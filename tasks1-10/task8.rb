class Task8
  HUGE_STRING = "73167176531330624919225119674426574742355349194934969835203127745063262395783180169848018694788518438586156078911294949545950173795833195285320880551112540698747158523863050715693290963295227443043557668966489504452445231617318564030987111217223831136222989342338030813533627661428280644448664523874930358907296290491560440772390713810515859307960866657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"
  NUM_OF_DIGITS_NEAR = 12
  def search_product
    max = 0
    start = 0
    while start < HUGE_STRING.length - NUM_OF_DIGITS_NEAR
      finish = start + NUM_OF_DIGITS_NEAR
      num = HUGE_STRING[start..finish]
      total = 1
      num.each_char do |digit|
        total *= digit.to_i
      end
      if total > max
        max = total
      end
      start += 1
    end
    max
  end
end
task8 = Task8.new
p task8.search_product
